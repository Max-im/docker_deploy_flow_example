version: '3.9'
services:
  db-server:
    image: 'postgres:latest'
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
  redis-server:
    image: "redis:alpine"
  nginx:
    restart: always
    build: ../../nginx
    ports:
      - '3050:80'
  api:
    build:
      dockerfile: Dockerfile.dev
      context: ../../server
    depends_on:
      - db-server 
      - migration
    env_file:
    - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db-server/${DB_NAME}?schema=public
  migration:
    build: ../../db
    depends_on:
      - db-server
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db-server/${DB_NAME}?schema=public
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ../../client
    volumes:
      - /app/node_modules
      - ../../client:/app
  worker-service:
    build:
      dockerfile: Dockerfile.dev
      context: ../../worker
    volumes:
      - /app/node_modules
      - ../../worker:/app
    environment:
      - REDIS_HOST=redis-server
      - REDIS_PORT=6379
